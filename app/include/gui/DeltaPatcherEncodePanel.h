//Copyright (C) 2010+ Phoenix.

//This program is free software: you can redistribute it and/or modify 
//it under the terms of the GNU General Public License as published by 
//the Free Software Foundation, version 2.0. 

//This program is distributed in the hope that it will be useful, 
//but WITHOUT ANY WARRANTY; without even the implied warranty of 
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
//GNU General Public License 2.0 for more details. 

//A copy of the GPL 2.0 should have been included with the program. 
//If not, see http://www.gnu.org/licenses/ 

//Source code and contact information can be found at 
//https://github.com/marco-calautti


#ifndef __DeltaPatcherEncodePanel__
#define __DeltaPatcherEncodePanel__

/**
@file
Subclass of EncodePanel, which is generated by wxFormBuilder.
*/

#include "dpgui.h"
#include "Logger.h"

#include <patcher/XDeltaPatch.h>

#include <wx/thread.h>
#include <wx/event.h>

/** Implementing EncodePanel */
class DeltaPatcherEncodePanel : public EncodePanel, public wxThreadHelper
{
protected:
	// Handlers for EncodePanel events.
	void OnOpenOriginal( wxCommandEvent& event );
	void OnOpenModified( wxCommandEvent& event );
	void OnSavePatch( wxCommandEvent& event );
	void OnCreatePatch( wxCommandEvent& event );
	void OnEncodeOptionsClicked(wxCommandEvent& event);

	virtual wxThread::ExitCode Entry();
public:
	/** Constructor */
	DeltaPatcherEncodePanel( wxWindow* parent, Logger* logger );
	
	void SwitchTo();
	void SetOriginalFile(const wxChar* filePath);
	void SetModifiedFile(const wxChar* filePath);
	void SetPatchFile(const wxChar* patchPath);
	
	void OnThreadUpdate(wxThreadEvent& evt);
	void StartCreatePatch();
private:
	int GetCompressionLevel();
	int GetSecondaryCompression();
	wxInt64 GetWindowSize();
private:
	Logger* logger;
	
	wxMenu* createOptionsMenu;
	wxMenu* compressionMenu;
	wxMenu* secondaryCompressionMenu;
	wxMenu* windowSizeMenu;
	wxMenuItem* checksumCheck;

	wxString threadOriginal;
	wxString threadModified;
	XDeltaPatch threadXDP;
};

#endif // __DeltaPatcherEncodePanel__
